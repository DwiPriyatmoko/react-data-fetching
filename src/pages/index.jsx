import { useFetchProducts } from '@/features/product/useFetchProducts';
import {
	Button,
	Container,
	FormControl,
	FormLabel,
	Heading,
	Input,
	Spinner,
	Table,
	Tbody,
	Td,
	Text,
	Th,
	Thead,
	Tr,
	VStack,
} from '@chakra-ui/react';
import { useMutation } from '@tanstack/react-query';
import { useFormik } from 'formik';
import Head from 'next/head';

// chakra -> ui CSS framework
// formik -> handle form
// yup -> validation
// axios -> http request (API calls)
// react-query -> manage API calls

export default function Home() {
	const { data, isLoading } = useFetchProducts();
	const {} = useMutation({
		mutationFn: async () => {
			console.log('submit dong');
		},
	});

	const formik = useFormik({
		initialValues: {
			title: '',
			price: '',
			description: '',
			image: '',
		},
		onSubmit: async (values) => {
			console.log('submit dong');
		},
	});

	const handleFormSubmit = (event) => {
		formik.setFieldValue(event.target.name, event.target.value);
	};

	// console.log(isLoading);

	const renderProducts = () => {
		return data?.data.map((product) => {
			return (
				<Tr key={product.id.toString()}>
					<Td>{product.id}</Td>
					<Td>{product.title}</Td>
					<Td>{product.price}</Td>
					<Td>{product.description}</Td>
					<Td>{product.image}</Td>
				</Tr>
			);
		});
	};

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main>
				<Container maxW='2xl' centerContent>
					<Heading>Home Page</Heading>
					<Table mb={10}>
						<Thead>
							<Tr>
								<Th>ID</Th>
								<Th>Title</Th>
								<Th>price</Th>
								<Th>description</Th>
								<Th>image</Th>
							</Tr>
						</Thead>
						<Tbody>
							{renderProducts()}
							{/* {isLoading ? <Spinner /> : null} */}
						</Tbody>
					</Table>

					<form style={{ width: '100%' }} onSubmit={formik.handleSubmit}>
						<VStack spacing={3}>
							<FormControl>
								<FormLabel>Product name</FormLabel>
								<Input onChange={handleFormSubmit} name='name' />
							</FormControl>
							<FormControl>
								<FormLabel>Price</FormLabel>
								<Input onChange={handleFormSubmit} name='price' />
							</FormControl>
							<FormControl>
								<FormLabel>Description</FormLabel>
								<Input onChange={handleFormSubmit} name='description' />
							</FormControl>
							<FormControl>
								<FormLabel>Image</FormLabel>
								<Input onChange={handleFormSubmit} name='image' />
							</FormControl>
							<Button type='submit'>Submit</Button>
						</VStack>
					</form>
				</Container>
			</main>
		</>
	);
}
